// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/articles" | "/articles/[slug]" | "/dashboard" | "/dashboard/members" | "/dashboard/proposals" | "/dashboard/proposals/[id]" | "/features" | "/features/citizenship" | "/features/community" | "/features/economy" | "/features/education" | "/features/governance" | "/features/security" | "/features/treasury" | "/features/voting" | "/knowledge" | "/learn" | "/login" | "/profile" | "/signup"
type AppRouteHandlerRoutes = "/api/auth/change-password" | "/api/auth/health" | "/api/auth/login" | "/api/auth/profile" | "/api/auth/register"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = "/api/auth/[[...path]]" | "/api/users/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/api/auth/[[...path]]": { "path"?: string[]; }
  "/api/auth/change-password": {}
  "/api/auth/health": {}
  "/api/auth/login": {}
  "/api/auth/profile": {}
  "/api/auth/register": {}
  "/api/users/[[...path]]": { "path"?: string[]; }
  "/articles": {}
  "/articles/[slug]": { "slug": string; }
  "/dashboard": {}
  "/dashboard/members": {}
  "/dashboard/proposals": {}
  "/dashboard/proposals/[id]": { "id": string; }
  "/features": {}
  "/features/citizenship": {}
  "/features/community": {}
  "/features/economy": {}
  "/features/education": {}
  "/features/governance": {}
  "/features/security": {}
  "/features/treasury": {}
  "/features/voting": {}
  "/knowledge": {}
  "/learn": {}
  "/login": {}
  "/profile": {}
  "/signup": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
