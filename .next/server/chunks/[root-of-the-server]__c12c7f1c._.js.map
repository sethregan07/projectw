{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/nandan/Documents/new-platform/src/app/api/auth/register/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // Forward the request to the auth service\n    const response = await fetch('http://localhost:3001/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      return NextResponse.json(\n        { message: errorData.message || 'Registration failed' },\n        { status: response.status }\n      );\n    }\n    \n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('Registration error:', error);\n    return NextResponse.json(\n      { message: 'Server error during registration' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,0CAA0C;QAC1C,MAAM,WAAW,MAAM,MAAM,2CAA2C;YACtE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO,gLAAY,CAAC,IAAI,CACtB;gBAAE,SAAS,UAAU,OAAO,IAAI;YAAsB,GACtD;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gLAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gLAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAmC,GAC9C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}